import asyncio
from uuid import uuid4
from dotenv import load_dotenv

from vision_agents.core import User, Agent
from vision_agents.plugins import kokoro, deepgram, getstream, smart_turn, gemini, heygen

load_dotenv()


async def start_avatar_agent() -> None:
    """Start an agent with HeyGen avatar.
    
    This example demonstrates how to use HeyGen's avatar streaming
    to add realistic avatar video to your AI agent. The avatar will
    lip-sync with the audio generated by the TTS.
    """
    
    # Create LLM
    llm = gemini.LLM("gemini-2.0-flash")
    
    # Create agent with HeyGen avatar
    agent = Agent(
        edge=getstream.Edge(),
        agent_user=User(
            name="AI Assistant with Avatar",
            id="agent"
        ),
        instructions=(
            "You're a friendly and helpful AI assistant. "
            "Keep your responses conversational and engaging. "
            "Don't use special characters or formatting."
        ),
        
        # LLM and speech components
        llm=llm,
        tts=kokoro.TTS(),  # Using Kokoro (free, local TTS)
        stt=deepgram.STT(),
        turn_detection=smart_turn.TurnDetection(
            buffer_duration=2.0,
            confidence_threshold=0.5
        ),
        
        # Add HeyGen avatar as a video publisher
        processors=[
            heygen.AvatarPublisher(
                avatar_id="default",  # Use your HeyGen avatar ID
                quality="high",       # Video quality: "low", "medium", "high"
                resolution=(1920, 1080),  # Output resolution
            )
        ]
    )
    
    # Create a call
    call = agent.edge.client.video.call("default", str(uuid4()))
    
    # Join the call
    with await agent.join(call):
        # Open demo UI
        await agent.edge.open_demo(call)
        
        # Greet the user through the avatar
        await agent.simple_response(
            "Hello! I'm your AI assistant with an avatar. "
            "How can I help you today?"
        )
        
        # Keep the call running
        await agent.finish()


if __name__ == "__main__":
    asyncio.run(start_avatar_agent())

